(:JIQS: ShouldRun; Output="({ "label" : 0, "name" : "a", "stringArrayCol" : [ "i", "am", "data", "entry", "1" ], "word2vecResult" : [ -0.0000883, 0.0015511, 0.0012457, -0.0001746, 0.0007686, -0.0003709, -0.0009596, 0.0025182, -0.000208, 0.0003535, 0.0000604, -0.0015703, 0.0004818, -0.0000826, 0.0019679, -0.0004582, -0.0012067, 0.0001253, -0.0006972, -0.0002701, -0.0027646, -0.002318, 0.0013835, 0.0006303, 0.0003136, -0.0002127, 0.0025911, -0.0023532, -0.0019787, 0.0009483, -0.0009493, -0.0017403, 0.0007967, 0.0000759, -0.0002522, 0.0002741, -0.0003788, 0.0014341, -0.001209, -0.0017257, 0.0004449, 0.0005102, -0.0009056, 0.000036, 0.0005793, -0.0005341, -0.001344, -0.0000818, -0.0007779, -0.0002133, 0.0012643, -0.0007412, 0.0005663, 0.0016635, 0.0008368, -0.0009974, 0.0007849, -0.0023398, -0.0003876, 0.0010413, 0.0005508, 0.0008074, 0.0024637, 0.0015165, 0.0003661, 0.0012577, -0.0009936, -0.0026455, 0.0000593, 0.0011167, -0.0004664, -0.0002317, 0.0018186, -0.0014949, -0.0001643, -0.0003119, -0.0013755, 0.002603, 0.0000231, -0.0000169, -0.0012047, -0.0001442, 0.0014694, 0.0012947, 0.001601, 0.0002285, -0.000714, 0.001071, 0.0004291, 0.0025248, -0.0004979, 0.0005268, -0.0012049, 0.0013352, -0.0001557, -0.000974, -0.0010366, 0.0007682, 0.0007964, 0.0004109 ] }, { "label" : 1, "name" : "b", "stringArrayCol" : [ "i", "am", "data", "entry", "2" ], "word2vecResult" : [ -0.0000883, 0.0015511, 0.0012457, -0.0001746, 0.0007686, -0.0003709, -0.0009596, 0.0025182, -0.000208, 0.0003535, 0.0000604, -0.0015703, 0.0004818, -0.0000826, 0.0019679, -0.0004582, -0.0012067, 0.0001253, -0.0006972, -0.0002701, -0.0027646, -0.002318, 0.0013835, 0.0006303, 0.0003136, -0.0002127, 0.0025911, -0.0023532, -0.0019787, 0.0009483, -0.0009493, -0.0017403, 0.0007967, 0.0000759, -0.0002522, 0.0002741, -0.0003788, 0.0014341, -0.001209, -0.0017257, 0.0004449, 0.0005102, -0.0009056, 0.000036, 0.0005793, -0.0005341, -0.001344, -0.0000818, -0.0007779, -0.0002133, 0.0012643, -0.0007412, 0.0005663, 0.0016635, 0.0008368, -0.0009974, 0.0007849, -0.0023398, -0.0003876, 0.0010413, 0.0005508, 0.0008074, 0.0024637, 0.0015165, 0.0003661, 0.0012577, -0.0009936, -0.0026455, 0.0000593, 0.0011167, -0.0004664, -0.0002317, 0.0018186, -0.0014949, -0.0001643, -0.0003119, -0.0013755, 0.002603, 0.0000231, -0.0000169, -0.0012047, -0.0001442, 0.0014694, 0.0012947, 0.001601, 0.0002285, -0.000714, 0.001071, 0.0004291, 0.0025248, -0.0004979, 0.0005268, -0.0012049, 0.0013352, -0.0001557, -0.000974, -0.0010366, 0.0007682, 0.0007964, 0.0004109 ] }, { "label" : 2, "name" : "c", "stringArrayCol" : [ "i", "am", "data", "entry", "3" ], "word2vecResult" : [ -0.0000883, 0.0015511, 0.0012457, -0.0001746, 0.0007686, -0.0003709, -0.0009596, 0.0025182, -0.000208, 0.0003535, 0.0000604, -0.0015703, 0.0004818, -0.0000826, 0.0019679, -0.0004582, -0.0012067, 0.0001253, -0.0006972, -0.0002701, -0.0027646, -0.002318, 0.0013835, 0.0006303, 0.0003136, -0.0002127, 0.0025911, -0.0023532, -0.0019787, 0.0009483, -0.0009493, -0.0017403, 0.0007967, 0.0000759, -0.0002522, 0.0002741, -0.0003788, 0.0014341, -0.001209, -0.0017257, 0.0004449, 0.0005102, -0.0009056, 0.000036, 0.0005793, -0.0005341, -0.001344, -0.0000818, -0.0007779, -0.0002133, 0.0012643, -0.0007412, 0.0005663, 0.0016635, 0.0008368, -0.0009974, 0.0007849, -0.0023398, -0.0003876, 0.0010413, 0.0005508, 0.0008074, 0.0024637, 0.0015165, 0.0003661, 0.0012577, -0.0009936, -0.0026455, 0.0000593, 0.0011167, -0.0004664, -0.0002317, 0.0018186, -0.0014949, -0.0001643, -0.0003119, -0.0013755, 0.002603, 0.0000231, -0.0000169, -0.0012047, -0.0001442, 0.0014694, 0.0012947, 0.001601, 0.0002285, -0.000714, 0.001071, 0.0004291, 0.0025248, -0.0004979, 0.0005268, -0.0012049, 0.0013352, -0.0001557, -0.000974, -0.0010366, 0.0007682, 0.0007964, 0.0004109 ] }, { "label" : 3, "name" : "d", "stringArrayCol" : [ "i", "am", "data", "entry", "4" ], "word2vecResult" : [ -0.0000883, 0.0015511, 0.0012457, -0.0001746, 0.0007686, -0.0003709, -0.0009596, 0.0025182, -0.000208, 0.0003535, 0.0000604, -0.0015703, 0.0004818, -0.0000826, 0.0019679, -0.0004582, -0.0012067, 0.0001253, -0.0006972, -0.0002701, -0.0027646, -0.002318, 0.0013835, 0.0006303, 0.0003136, -0.0002127, 0.0025911, -0.0023532, -0.0019787, 0.0009483, -0.0009493, -0.0017403, 0.0007967, 0.0000759, -0.0002522, 0.0002741, -0.0003788, 0.0014341, -0.001209, -0.0017257, 0.0004449, 0.0005102, -0.0009056, 0.000036, 0.0005793, -0.0005341, -0.001344, -0.0000818, -0.0007779, -0.0002133, 0.0012643, -0.0007412, 0.0005663, 0.0016635, 0.0008368, -0.0009974, 0.0007849, -0.0023398, -0.0003876, 0.0010413, 0.0005508, 0.0008074, 0.0024637, 0.0015165, 0.0003661, 0.0012577, -0.0009936, -0.0026455, 0.0000593, 0.0011167, -0.0004664, -0.0002317, 0.0018186, -0.0014949, -0.0001643, -0.0003119, -0.0013755, 0.002603, 0.0000231, -0.0000169, -0.0012047, -0.0001442, 0.0014694, 0.0012947, 0.001601, 0.0002285, -0.000714, 0.001071, 0.0004291, 0.0025248, -0.0004979, 0.0005268, -0.0012049, 0.0013352, -0.0001557, -0.000974, -0.0010366, 0.0007682, 0.0007964, 0.0004109 ] }, { "label" : 4, "name" : "e", "stringArrayCol" : [ "i", "am", "data", "entry", "5" ], "word2vecResult" : [ -0.0000883, 0.0015511, 0.0012457, -0.0001746, 0.0007686, -0.0003709, -0.0009596, 0.0025182, -0.000208, 0.0003535, 0.0000604, -0.0015703, 0.0004818, -0.0000826, 0.0019679, -0.0004582, -0.0012067, 0.0001253, -0.0006972, -0.0002701, -0.0027646, -0.002318, 0.0013835, 0.0006303, 0.0003136, -0.0002127, 0.0025911, -0.0023532, -0.0019787, 0.0009483, -0.0009493, -0.0017403, 0.0007967, 0.0000759, -0.0002522, 0.0002741, -0.0003788, 0.0014341, -0.001209, -0.0017257, 0.0004449, 0.0005102, -0.0009056, 0.000036, 0.0005793, -0.0005341, -0.001344, -0.0000818, -0.0007779, -0.0002133, 0.0012643, -0.0007412, 0.0005663, 0.0016635, 0.0008368, -0.0009974, 0.0007849, -0.0023398, -0.0003876, 0.0010413, 0.0005508, 0.0008074, 0.0024637, 0.0015165, 0.0003661, 0.0012577, -0.0009936, -0.0026455, 0.0000593, 0.0011167, -0.0004664, -0.0002317, 0.0018186, -0.0014949, -0.0001643, -0.0003119, -0.0013755, 0.002603, 0.0000231, -0.0000169, -0.0012047, -0.0001442, 0.0014694, 0.0012947, 0.001601, 0.0002285, -0.000714, 0.001071, 0.0004291, 0.0025248, -0.0004979, 0.0005268, -0.0012049, 0.0013352, -0.0001557, -0.000974, -0.0010366, 0.0007682, 0.0007964, 0.0004109 ] }, { "label" : 5, "name" : "f", "stringArrayCol" : [ "i", "am", "data", "entry", "6" ], "word2vecResult" : [ -0.0000883, 0.0015511, 0.0012457, -0.0001746, 0.0007686, -0.0003709, -0.0009596, 0.0025182, -0.000208, 0.0003535, 0.0000604, -0.0015703, 0.0004818, -0.0000826, 0.0019679, -0.0004582, -0.0012067, 0.0001253, -0.0006972, -0.0002701, -0.0027646, -0.002318, 0.0013835, 0.0006303, 0.0003136, -0.0002127, 0.0025911, -0.0023532, -0.0019787, 0.0009483, -0.0009493, -0.0017403, 0.0007967, 0.0000759, -0.0002522, 0.0002741, -0.0003788, 0.0014341, -0.001209, -0.0017257, 0.0004449, 0.0005102, -0.0009056, 0.000036, 0.0005793, -0.0005341, -0.001344, -0.0000818, -0.0007779, -0.0002133, 0.0012643, -0.0007412, 0.0005663, 0.0016635, 0.0008368, -0.0009974, 0.0007849, -0.0023398, -0.0003876, 0.0010413, 0.0005508, 0.0008074, 0.0024637, 0.0015165, 0.0003661, 0.0012577, -0.0009936, -0.0026455, 0.0000593, 0.0011167, -0.0004664, -0.0002317, 0.0018186, -0.0014949, -0.0001643, -0.0003119, -0.0013755, 0.002603, 0.0000231, -0.0000169, -0.0012047, -0.0001442, 0.0014694, 0.0012947, 0.001601, 0.0002285, -0.000714, 0.001071, 0.0004291, 0.0025248, -0.0004979, 0.0005268, -0.0012049, 0.0013352, -0.0001557, -0.000974, -0.0010366, 0.0007682, 0.0007964, 0.0004109 ] })" :)


let $data := annotate(
    json-file("../../../../queries/rumbleML/sample-ml-data-flat.json"),
    { "label": "integer", "binaryLabel": "integer", "name": "string", "age": "double", "weight": "double", "booleanCol": "boolean", "nullCol": "null", "stringCol": "string", "stringArrayCol": ["string"], "intArrayCol": ["integer"],  "doubleArrayCol": ["double"],  "doubleArrayArrayCol": [["double"]] }
)

let $est := get-estimator("Word2Vec")
let $tra := $est(
    $data,
    { "inputCol": "stringArrayCol", "outputCol": "word2vecResult"}
)
for $result in $tra(
    $data,
    { }
)
return {
    "label": $result.label,
    "name": $result.name,
    "stringArrayCol": $result.stringArrayCol,
    "word2vecResult": [ for $v in $result.word2vecResult[] return round($v*10000000) div 10000000 ]
}
